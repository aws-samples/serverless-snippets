{
    "title": "VTL - CRUD Operations - Part 1",
    "description": "REST API Direct Integration with DynamoDB",
    "type": "Integration",
    "services": [
      "apigw",
      "dynamodb"
    ],
    "languages": [
      "vtl",
      "json"
    ],
    "tags": [],
    "introBox": {
      "headline": "How it works",
      "text":  [
        "It is possible to have full REST API CRUD (create, read, update, delete) operations using direct integration between API Gateway and DynamoDB, a true no-code solution.",
        "To get started, in this first Part we will cover a simple STRINGS ONLY example.  In later installments we will cover all DynamoDB data types."
      ]
    },
    "gitHub": {
      "template": {
        "repoURL": "https://github.com/aws-samples/serverless-snippets/tree/main/apigateway-dynamodb-crud-simple"
      }
    },
    "snippets": [
      {
        "title": "Operations",
        "codeTabs": [
          {
            "id": "Prerequisites",
            "title": "Configuration",
            "description": "Theses snippets are generic or you can use the following for validation.",            
            "snippets": [
              {
                "title": "API Gateway configuration ",
                "description": "Create a REST API with the following resources and methods:",
                "snippetPath": "APIspec.txt",
                "language": "txt"
              },
              {
                "title": "DynamoDB configuration ",
                "description": "Create a DyanmoDB Table for the example JSON data",
                "snippetPath": "DynamoDBspec.txt",
                "language": "txt"
              }
            ]
          },
          {
            "id": "Create",
            "title": "CRUD 'C' is Create",
            "description": "Uses DynamoDB PutItem which will create or replace an entire existing record.",
            "snippets": [
              {
                "title": "API JSON Request Body",
                "description": "Simple JSON example with all types as Strings",                
                "snippetPath": "create/create-request=body.json",
                "language": "json"
              },
              {
                "title": "Integration Request Mapping Template",
                "description": "Use this Velocity Template to transform the JSON body to DynamoDB format",                
                "snippetPath": "create/snippet-creaate.txt",
                "language": "vtl"
              },
              {
                "title": "JSON Integration Request Body",
                "description": "Output from Request Mapping Template, sent to DynamoDB PutItem",                
                "snippetPath": "create/putitem-request.json",
                "language": "json"
              }
            ]
          },
          {
            "id": "Read",
            "title": "CRUD 'R' is Read",
            "snippets": [
              {
                "title": "Integration Request Mapping Template",
                "description": "Use API path parameter to create DynamoDB GetItem request",                
                "snippetPath": "read/snippet-get-request.txt",
                "language": "vtl"
              },
              {
                "title": "DynamoDB Read Response",
                "description": "JSON document to be transformed to original simple JSON",                
                "snippetPath": "read/read-response-body.json",
                "language": "json"
              },
              {
                "title": "Integration Response Mapping Template",
                "description": "Transform DynamoDB format to simple JSON",                
                "snippetPath": "read/snippet-get-transform.txt",
                "language": "vtl"
              }
            ]
          },
          {
            "id": "Update",
            "title": "CRUD 'U' is Update",
            "description": "Uses DynamoDB UpdateItem which will create or update a record, adding or overwriting existing fields.",
            "snippets": [
              {
                "title": "API JSON Request Body",
                "description": "Update one field of original JSON",                
                "snippetPath": "update/update-request-body.json",
                "language": "json"
              },
              {
                "title": "Integration Request Mapping Template",
                "description": "Transform API request into DynamoDB UpdateItem format",                
                "snippetPath": "update/snippet-update.txt",
                "language": "vtl"
              },              
              {
                "title": "JSON Integration Request Body",
                "description": "Output from Request Mapping Template, sent to DynamoDB UpdateItem",                
                "snippetPath": "update/updateitem-request.json",
                "language": "json"
              }            
            ]
          },
          {
            "id": "Delete",
            "title": "CRUD 'D' is Delete",
            "snippets": [
              {
                "title": "Integration Request Mapping Template",
                "description": "Use API path parameter to create DynamoDB DeleteItem request",                
                "snippetPath": "delete/snippet-delete.txt",
                "language": "vtl"
              },
              {
                "title": "JSON Integration Request Body",
                "description": "Output from Request Mapping Template, sent to DynamoDB Deleteitem",                
                "snippetPath": "delete/deleteitem-request.json",
                "language": "json"
              }            
            ]
          }
        ]
      }
    ],
    "authors": [
      {
        "headline": "Presented by Ken Cyr",
        "name": "Ken Cyr",
        "image": "https://s12d.com/kc-toon",
        "bio": "Ken Cyr is an Inventor and Senior Partner Solutions Architect with Amazon Web Services and is based in North Texas. Ken was an early adopter of serverless cloud and enjoys sharing serverless techniques and patterns with others.",
        "linkedin": "",
        "twitter": ""
      }
    ]
  }
